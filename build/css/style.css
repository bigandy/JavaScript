article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,video{display:inline-block;}audio:not([controls]){display:none;height:0;}[hidden],template{display:none;}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}a{background:transparent;}a:focus{outline:thin dotted;}a:active,a:hover{outline:0;}h1{font-size:2em;margin:0.67em 0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:bold;}dfn{font-style:italic;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}mark{background:#ff0;color:#000;}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em;}pre{white-space:pre-wrap;}q{quotes:"\201C" "\201D" "\2018" "\2019";}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-0.5em;}sub{bottom:-0.25em;}img{border:0;}svg:not(:root){overflow:hidden;}figure{margin:0;}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;}button,input{line-height:normal;}button,select{text-transform:none;}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}textarea{overflow:auto;vertical-align:top;}table{border-collapse:collapse;border-spacing:0;}.list--inline:after,fieldset:after{clear:both;}.list--inline:before,fieldset:before,.list--inline:after,fieldset:after{content:" ";display:table;}.cb{clear:both;}html{box-sizing:border-box;}*,*:before,*:after{box-sizing:inherit;}body{margin-left:auto;margin-right:auto;width:95%;}h1{color:#fff;text-transform:uppercase;text-align:center;font-weight:bold;border:5px solid #ffa500;padding:1em;margin-bottom:30px;background:#ffa500;}.list--plain,.list--inline,.gform_fields{margin-left:0;padding-left:0;}.list--plain li,.list--inline li,.gform_fields li{list-style-type:none;}.list--inline li{float:left;padding-right:5px;}.list--back{position:relative;padding-left:1.25em;}.list--back:before{content:"\21d0";position:absolute;top:0;left:0;}.list--nav li{padding-top:0.5em;padding-bottom:0.5em;}/*! HTML5 Boilerplate v4.3.0 | MIT License | http://h5bp.com/ */html,button,input,select,textarea{color:#222;}html{font-size:1em;line-height:1.4;}::-moz-selection{background:#b3d4fc;text-shadow:none;}::selection{background:#b3d4fc;text-shadow:none;}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0;}audio,canvas,img,svg,video{vertical-align:middle;}fieldset{border:0;margin:0;padding:0;}textarea{resize:vertical;}.browsehappy{margin:0.2em 0;background:#ccc;color:#000;padding:0.2em 0;}.ir{background-color:transparent;border:0;overflow:hidden;}.ir:before{content:"";display:block;width:0;height:150%;}.hidden{display:none !important;visibility:hidden;}.visuallyhidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto;}.invisible{visibility:hidden;}.clearfix:before,.clearfix:after{content:" ";display:table;}.clearfix:after{clear:both;}@media only screen and (min-width: 35em){}@media print,(-o-min-device-pixel-ratio: 5/4),(-webkit-min-device-pixel-ratio: 1.25),(min-resolution: 120dpi){}@media print{@page{margin:0.5cm;}*{background:transparent !important;color:#000 !important;box-shadow:none !important;text-shadow:none !important;}a,a:visited{text-decoration:underline;}a[href]:after{content:" (" attr(href) ")";}abbr[title]:after{content:" (" attr(title) ")";}.ir a:after,a[href^="javascript:"]:after,a[href^="#"]:after{content:"";}pre,blockquote{border:1px solid #999;page-break-inside:avoid;}thead{display:table-header-group;}tr,img{page-break-inside:avoid;}img{max-width:100% !important;}p,h2,h3{orphans:3;widows:3;}h2,h3{page-break-after:avoid;}}.table-comparison{margin-top:2.5%;}.table-comparison td,.table-comparison th{cursor:pointer;}.table-comparison table{width:80%;margin:auto;}.table-comparison table td{border:1px solid #000;padding:1em;text-align:center;}.table-comparison table .tr--active td{border-color:#f00;}.table-comparison table td.level{background:rgba(0, 0, 255, 0.25);}.table-comparison table td.users{background:rgba(0, 255, 0, 0.25);}.table-comparison table td.years{background:rgba(255, 128, 0, 0.25);}.table-comparison table .td--active{font-weight:bold;color:#fff;}.table-comparison table .td--active.level{background:#00f;}.table-comparison table .td--active.users{background:#0f0;}.table-comparison table .td--active.years{background:#ff8000;}.table-comparison h1{background:transparent;color:#000;clear:both;}.table-comparison .sub-output{border:3px solid #000;padding:1em;width:32.3333%;margin-right:1%;margin-bottom:1%;margin-top:1%;float:left;height:100px;text-align:center;padding-top:2em;}.table-comparison .sub-output:last-of-type{margin-right:0;}.table-comparison span{display:block;background:#0f0;padding:0.5em;margin-bottom:0.5em;}.table-comparison span.negative{background:#f00;}input,output{border:2px solid #ffa500;padding:1em;}input{width:100%;}.input-wrapper,output{width:49%;float:left;margin-right:1%;}label{font-weight:bold;padding-bottom:1em;padding-top:1em;display:block;cursor:pointer;}fieldset{margin-bottom:1em;}.input-wrapper{position:relative;}.input-clear{position:absolute;top:0.9em;right:0.75em;text-decoration:none;}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}input[type=number]{-moz-appearance:textfield;}@media screen and (min-width: 600px){body{margin-top:10vh;width:80%;max-width:1400px;}fieldset{margin-bottom:3em;}}/*# sourceMappingURL=data:application/json;base64,*/